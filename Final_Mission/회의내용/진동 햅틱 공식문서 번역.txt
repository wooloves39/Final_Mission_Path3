햅틱 피드백
입력 상태를보고하는 것 외에도, Oculus 터치 컨트롤러는 진동을 통해 햅틱 피드백을 제공 할 수 있습니다.

SDK는 두 가지 유형의 햅틱을 지원합니다.

비 버퍼 햅틱 (Non-Buffered Haptics) -이 접근법을 통해 햅틱은 진동을 켜거나 끄고 주파수 
(160Hz 또는 320Hz)와 진폭 (0 ~ 255)을 지정함으로써 제어됩니다. 컨트롤러가 햅틱 설정을 
수정하는 API 호출에 응답하는 데 33ms가 필요하기 때문에 버퍼가없는 햅틱은 짧은 대기 시간 요구 사항이없는 간단한 효과를 위해 설계되었습니다.
Buffered Haptics -이 접근법은 사인파 또는 탄젠트 함수 주변의 진동 진폭을 패터닝하고,
 컨트롤러에서 진동을 패닝하고 다양한 저주파 캐리어 파를 생성하는 등 다양한 효과를 제공합니다.
 버퍼링 된 햅틱을 사용하면 응용 프로그램에서 한쪽 또는 양쪽 컨트롤러에 바이트 버퍼를 보냅니다.
이 바이트는 0 (진동 진폭 없음)에서 255 (최대 진동 진폭)까지 일련의 진폭 값으로 해석됩니다.
 그런 다음 컨트롤러는 320Hz (또는 3.125ms마다 1 바이트)에서 버퍼 된 진폭 값을 "재생"합니다.
 따라서 API 호출 시간부터 버퍼가 컨트롤러 내에서 재생 될 때까지 약 10ms가 걸리지 만 비 버퍼
 햅틱과 비교할 때 훨씬 정밀한 입도로 진동 진폭을 제어 할 수 있습니다.
참고 : 버퍼링 된 함수와 버퍼되지 않은 함수는 함께 사용하면 안됩니다. 예기치 않은 햅틱 피드백이 발생합니다.


-코드-
ovr_SetControllerVibration( Hmd, ovrControllerType_LTouch, freq, trigger);

비 버퍼 햅틱 사용
ovr_SetControllerVibration을 호출하여 진동을 활성화 할 수 있습니다.

진동은 주파수를 지정하여 활성화됩니다. 0.0f를 지정하면 160Hz에서 진동합니다. 1.0f를 지정하면 320Hz에서 진동합니다.


버퍼링 된 햅틱 개요
버퍼링 된 햅틱을 사용하면 버퍼링되지 않은 햅틱을 사용하는 것 이상의 많은 멋진 효과를 만들 수 있습니다.
 예를 들어, PC-SDK와 함께 제공되는 버퍼 햅틱 샘플 앱 (및이 섹션의 뒷부분에서 설명 함)은 다음과 같은 효과를냅니다.

각 웨이브 사이클의 끝에서 "버즈 다운"효과로 부드러운 사인파 진동
왼쪽 및 오른쪽 컨트롤러를 통한 진동 패닝, 다시 패닝 사이클 마지막의 "버즈 다운"효과
초 저주파 버즈, 기본적으로 64Hz에서 일련의 진드기
삼각 함수의 접선 파 함수를 이용하는 혼돈 된 공식을 기반으로하는 저주파 진동을 엉망으로 만든다.
버퍼는 0에서 255까지의 값을 갖는 일련의 바이트로 구성됩니다. 여기서 0은 진폭이 없음 (즉, 진동 없음)을
 나타내고 255는 SDK에서 허용하는 진동의 최대 진폭 (또는 강도)을 나타냅니다. 
코드가 버퍼 내의 값을 채운 후에는 ovr_SubmitControllerVibration을 통해 
하나 또는 두 개의 Touch 컨트롤러로 버퍼를 보냅니다. 버퍼의 각 바이트는 320Hz의 속도로 차례로 "재생"됩니다.
 최대 버퍼 크기 (한 번에 컨트롤러에 보낼 수있는 최대 바이트 수 및 컨트롤러 내부 버퍼의 최대 크기)는 256 바이트입니다.
 단일 256 바이트 버퍼를 "재생"하는 데 걸리는 시간은 0.8 초 (320Hz의 속도로 재생되는 256 바이트)입니다. 
따라서 진동 효과의 진폭을 3.125ms (320Hz와 동일)까지 완벽하게 제어 할 수 있습니다. 
그러나 주파수는 320 / 2 = 160Hz, 320 / 3 = 106.7Hz, 320 / 4 = 80Hz, 320 / 5 = 64Hz 등과 같이 320Hz 또는 320Hz의 일부 정수만
가능합니다. 0보다 큰 진폭 값을 갖는 바이트가 산재 된 0 채워진 바이트를 전송함으로써. 

여기 몇 가지 예가 있어요.

320Hz, 최대 진폭 - [255, 255, 255, 255, ...]
160Hz, 최대 진폭 - [255, 0, 255, 0, 255, 0, 255, 0, ...]
320Hz, 1/2 진폭 - [127, 127, 127, ..., 127, ...]
160Hz, 1/2 진폭 - [127, 0, 127, 0, 127, 0, ..., 127, 0, ...]
단일 날카로운 진드기 (320Hz) - [0, 0, 255, 255, 255, 0, 0] [지연 x ms] [0, 0, 255, 255, 255, 0, 0]
단일 무딘 틱 (160Hz) - [0, 255, 0, 255, 0, 255, 0] [지연 x ms] [0, 255, 0, 255, 0, 255, 0]
일반적으로 더 가볍고 날카로운 동작에는 320Hz 공진 모드를 사용하고 더 무겁고 둔 한 동작에는 160Hz 모드를 사용하십시오.

위의 "날카로운 진드기"및 "둔탁 진드기"예제에서 다른 길이의 효과를 얻기 위해 펄스 수를 1에서 50까지 다양하게
 시도해 볼 수 있습니다. 또한 다른 진동 강도를 얻기 위해 진폭을 변화시켜 볼 수도 있습니다. 
일반적으로 진폭과 주파수를보다 무작위 또는 혼란스럽게 바꿀 수 있습니다. 
컨트롤러 이동이나 위치 또는 VR 경험 내의 다른 조건이나 이벤트와 같은
 입력 스트림을 기반으로하는 진동 효과를 다양하게 조절할 수도 있습니다.


위에서 설명한 효과 유형 외에도 다음과 같은 다양한 가능성이 있습니다.

하이브리드 틱 및 변조
반복 진드기를 진폭 변조 된 세그먼트와 결합 할 수 있습니다.

여러 입력 스트림 믹싱
haptics 버퍼 API에 전달하기 전에 여러 입력 스트림을 사전 혼합 할 수 있습니다.




주 : 컨트롤러 내의 햅틱 하드웨어의 공진 붕괴가 상대적으로 느리기 때문에 버퍼의 이전 샘플을 
기반으로 한 비선형 결과가 발생합니다. 예를 들어, 샘플이 50 % 진폭에서 공진하지만 이전 샘플의 진폭이 100 % 인
 경우 이전 샘플의 진폭이 0 % 인 경우와 다른 방식으로 진폭을 조정해야 할 수도 있습니다.
 오버 드라이브 알고리즘은 응답을 향상시킬 수 있습니다. 양수 (공격) 및 음수 (부식)에는 다른 상수가 필요할 수 있습니다.
 기본적인 알고리즘은 단순히 샘플 - 대 - 델타를 고려할 수 있습니다. 
보다 진보 된 알고리즘은 마지막 몇 샘플의 가중 평균을 사용해야 할 수도 있습니다.
참고 : 버퍼가 컨트롤러로 보내지면 (ovr_SubmitControllerVibration을 통해) 버퍼 전체가 "재생"됩니다. 
버퍼가 컨트롤러로 전송 된 후 버퍼의 재생을 중지 할 수있는 방법은 없습니다. 
따라서 VR 응용 프로그램 내에서 재생할 내용을 버퍼링하는 데주의를 기울여야합니다.
샘플 파이프 라인을 적절한 크기로 유지하는 것이 중요합니다. 
햅틱 주파수가 320Hz이고 적용 프레임 속도가 90Hz라고 가정 할 때, 프레임 당 약 10 샘플의 버퍼 크기를 목표로하는 것이 좋습니다.
 이렇게하면 비동기식 중단을 설명하기 위해 버퍼 영역을 유지하면서 프레임 당 3 ~ 4 햅틱 바이트를 재생할 수 있습니다.
 대기열에 더 많은 바이트가 있을수록 방해받지는 않지만 더 안전 해 지지만 새로 대기중인 진동이 재생되기 전에 대기 시간이 추가됩니다.

컨트롤러 내의 256 바이트 내부 버퍼 오버플로 또는 언더 플로우가 발생하지 않도록주의하십시오. 
(원형) 내부 버퍼에서 현재 사용할 수있는 바이트 수보다 큰 버퍼로 ovr_SubmitControllerVibration을 호출하면
 제출 된 전체 버퍼가 삭제됩니다. 반면, 컨트롤러 내에서 버퍼링 된 바이트의 소비를 따라 가지 못하는 속도로 바이트를
 제출하면 진동 재생에 간격이 생깁니다.


버퍼 햅틱 사용하기
버퍼의 상태를 확인하려면 ovr_GetControllerVibrationState를 호출하십시오.
-코드-
ovr_GetControllerVibrationState(ovrSession session, ovrControllerType controllerType, ovrHapticsPlaybackState* outState);


버퍼에 제출하려면 ovr_SubmitControllerVibration을 호출하십시오.
-코드-
ovr_SubmitControllerVibration(ovrSession session, ovrControllerType controllerType, const ovrHapticsBuffer* buffer);

다음 코드 샘플은 흥미롭고 멋진 효과를 생성하는 방법을 보여줍니다.
 이 코드는 다음 Visual Studio 프로젝트 <install_folder> \ Samples \ OculusRoomTiny_Advance \ 
ORT (Buffered Haptics)에서 Oculus PC-SDK 배포에 포함 된 기본 샘플 응용 프로그램을 확장합니다.
 원하는 경우이 코드를 프로젝트에 복사 / 붙여 넣기하여 main.cpp를 덮어 쓸 수 있습니다.


